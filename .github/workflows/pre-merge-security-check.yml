name: Pre-merge Security Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened ]

jobs:
  email-access-control-check:
    name: Email Access Control Verification
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    - name: Verify Email Access Restrictions
      run: |
        echo "üîí Verifying email access restrictions - preventing data leaks to unauthorized emails"
        pytest -v minimal_tests/test_email_access_control.py
      
    - name: Check Sensitive API Endpoint Protection
      run: |
        echo "üõ°Ô∏è Verifying that sensitive API endpoints are protected"
        pytest -v minimal_tests/test_access_control.py -k "test_route_access_control or test_data_access_control"
    
    - name: Verify Authorization Logic
      run: |
        echo "üîç Checking authorization logic in access control system"
        python -c "
        import sys
        import os
        sys.path.append(os.path.dirname(os.path.abspath('.')))
        from utils.access_control import AUTHORIZED_EMAILS
        assert 'maxriahi@gmail.com' in AUTHORIZED_EMAILS, 'Required authorized email is missing'
        assert 'mriahi@ooti.co' in AUTHORIZED_EMAILS, 'Required authorized email is missing'
        assert len(AUTHORIZED_EMAILS) == 2, f'Only exactly 2 emails should be authorized, found {len(AUTHORIZED_EMAILS)}'
        print('‚úÖ Authorization whitelist contains only the required emails')
        "
    
    - name: Check for Sensitive Data Exposure
      run: |
        grep -r "json.dump\|jsonify" --include="*.py" . | grep -v "test_" | grep -B 2 -A 2 "metrics\|insights\|financial\|revenue" || echo "No potential sensitive data exposure found"
        echo "‚úÖ No obvious sensitive data exposure in API responses" 